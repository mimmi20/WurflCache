language: php
sudo: false

php:
  - 5.3
  - 5.4
  - 5.5
  - 5.6
  - 7.0
  - nightly
  - hhvm

os:
  - linux

services:
  - memcache  # will start memcache service
  - memcached # will start memcached service

env:
  - DOCTRINE_VERSION=v1.1 ZEND_VERSION=2.1.* DESARROLLA_VERSION=1.4.0 ZETA_VERSION=1.6
  - DOCTRINE_VERSION=v1.2.0 ZEND_VERSION=2.2.* DESARROLLA_VERSION=1.5.0 ZETA_VERSION=dev-master
  - DOCTRINE_VERSION=v1.3.0 ZEND_VERSION=2.3.* DESARROLLA_VERSION=1.6.0 ZETA_VERSION=dev-master
  - DOCTRINE_VERSION=1.3.1 ZEND_VERSION=2.4.0 DESARROLLA_VERSION=1.7.0 ZETA_VERSION=dev-master
  - DOCTRINE_VERSION=1.4.0 ZEND_VERSION=2.4.1 DESARROLLA_VERSION=1.7.1 ZETA_VERSION=dev-master
  - DOCTRINE_VERSION=1.4.1 ZEND_VERSION=2.4.2 DESARROLLA_VERSION=1.8.0 ZETA_VERSION=dev-master
  - DOCTRINE_VERSION=1.5.*@dev ZEND_VERSION=2.5.0 DESARROLLA_VERSION=1.8.0 ZETA_VERSION=dev-master
  - DOCTRINE_VERSION=dev-master ZEND_VERSION=2.5.1 DESARROLLA_VERSION=dev-master ZETA_VERSION=dev-master
  - DOCTRINE_VERSION=dev-master ZEND_VERSION=2.5.2 DESARROLLA_VERSION=dev-master ZETA_VERSION=dev-master
  - DOCTRINE_VERSION=dev-master ZEND_VERSION=dev-master DESARROLLA_VERSION=dev-master ZETA_VERSION=dev-master

matrix:
  exclude:
    - env: DOCTRINE_VERSION=dev-master ZEND_VERSION=2.5.2 DESARROLLA_VERSION=dev-master ZETA_VERSION=dev-master
    - env: DOCTRINE_VERSION=dev-master ZEND_VERSION=dev-master DESARROLLA_VERSION=dev-master ZETA_VERSION=dev-master

before_script:
#   Set Configuration
  - if [ "`phpenv version-name`" != "hhvm" ] && [ "`phpenv version-name`" != "hhvm-nightly" ]; then echo 'date.timezone = "Europe/Paris"' >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi
  - if [ "`phpenv version-name`" == "5.3" ] || [ "`phpenv version-name`" == "5.4" ]; then echo "extension = apc.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi
  - if [ "`phpenv version-name`" != "hhvm" ] && [ "`phpenv version-name`" != "hhvm-nightly" ]; then echo "extension = memcached.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi
  - if [ "`phpenv version-name`" != "hhvm" ] && [ "`phpenv version-name`" != "hhvm-nightly" ]; then echo "extension = memcache.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi

#   Update composer
  - travis_retry composer self-update

#   Install dependencies
  - travis_retry composer require --no-update phpunit/phpunit:*
  - travis_retry composer require --no-update mikey179/vfsStream:1.3.*
  - travis_retry composer require --no-update zetacomponents/cache:${ZETA_VERSION}
  - travis_retry composer require --no-update doctrine/cache:${DOCTRINE_VERSION}
  - travis_retry composer require --no-update zendframework/zend-cache:${ZEND_VERSION}
  - travis_retry composer require --no-update desarrolla2/cache:${DESARROLLA_VERSION}
  - travis_retry composer require --no-update squizlabs/php_codesniffer:2.*
  - travis_retry composer require --no-update fabpot/php-cs-fixer:*
  - travis_retry composer update --no-dev -o --prefer-source

script:
  # xdebug is not installed on hhvm, so we are skipping the creation of code coverage data there
  - if [ "`phpenv version-name`" != "hhvm" ]; then vendor/bin/phpunit --colors --verbose --coverage-text --coverage-clover=coverage.clover; fi
  - if [ "`phpenv version-name`" == "hhvm" ]; then vendor/bin/phpunit --colors --verbose; fi
  - vendor/bin/phpcs --standard=psr2 -np src tests

after_success:
# xdebug is not installed on hhvm, so we have no code coverage data to send
  - if [ "`phpenv version-name`" != "hhvm" ]; then wget https://scrutinizer-ci.com/ocular.phar; fi
  - if [ "`phpenv version-name`" != "hhvm" ]; then php ocular.phar code-coverage:upload --format=php-clover coverage.clover; fi

notifications:
  email: false
